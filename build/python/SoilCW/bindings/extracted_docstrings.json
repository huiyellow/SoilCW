{"gr::SoilCW::soil_cw_radar_cc": "<+description of block+>\n\nConstructor Specific Documentation:\n\nReturn a shared_ptr to a new instance of SoilCW::soil_cw_radar_cc.\n\nTo avoid accidental use of raw pointers, SoilCW::soil_cw_radar_cc's constructor is in a private implementation class. SoilCW::soil_cw_radar_cc::make is the public interface for creating new instances.\n\nArgs:\n    main_freq : \n    delta_f : \n    samp_rate : \n    rx_gain : \n    tx_gain : \n    ref_gain : \n    enable_biastee : \n    baseband_amp : \n    baseband_freq : ", "gr::SoilCW::soil_cw_radar_cc::make": "<+description of block+>\n\nConstructor Specific Documentation:\n\nReturn a shared_ptr to a new instance of SoilCW::soil_cw_radar_cc.\n\nTo avoid accidental use of raw pointers, SoilCW::soil_cw_radar_cc's constructor is in a private implementation class. SoilCW::soil_cw_radar_cc::make is the public interface for creating new instances.\n\nArgs:\n    main_freq : \n    delta_f : \n    samp_rate : \n    rx_gain : \n    tx_gain : \n    ref_gain : \n    enable_biastee : \n    baseband_amp : \n    baseband_freq : ", "BladerfDevice": "This class setups the bladeRF 2.0 device as a radar, and provides functions to control the behaviours", "BladerfDevice::BladerfDevice": "Class Constructor The Constructor only initilize TX and RX metadata. To open and initilize the attached device,", "BladerfDevice::~BladerfDevice": "Class destructor close device if it was opened", "BladerfDevice::openDevice": "Open bladeRF 2.0 device, if success, set tunning mode to BLADERF_TUNING_MODE_FPGA", "BladerfDevice::closeDevice": "Close opened device Set device pointer to nullptr", "BladerfDevice::enable_rx_channels": "Configure and enable the RX channels of the bladeRF 2.0 device. Configure the frequency, gain, bandwidth, gain mode and sampling rate of the specified RX channels The function also enable biastee of RX channel for receiving radar echos if enable_biastee is set during class construction", "BladerfDevice::enable_tx_channels": "Configure and enable the TX channels of the bladeRF 2.0 device. Configure the frequency, gain, bandwidth and sampling rate of the specified TX channels The TX channels are configured to use SC16 Q11 samples  metadata The biastee of the TX channel for transmitting radar pulses is enabled if enable_biastee is set during class construction", "BladerfDevice::enable_channels": "Configure and enable TX and RX channels. It essentially call", "BladerfDevice::set_quick_tune": "set quick tune to provide faster frequency re-tuning. This function gets tuning parameters of TX and RX channels for each frequency step, and store them into d_quick_tunes_tx and d_quick_tunes_rx, respectively.", "BladerfDevice::tune_rx": "Tune RX channels to the specified frequency immediately", "BladerfDevice::tune_tx": "Tune TX channels to the specified frequency immediately", "BladerfDevice::pulse": "Create send and recv threads, schedule transmitting and receiving at the same time stamp", "BladerfDevice::get_device_handler": "Getters", "BladerfDevice::set_gain": "setters", "BladerfDevice::configure_channel": "Setup given channel", "BladerfDevice::send": "Transmit samples at the timestamp specified by d_tx_meta.timestamp", "BladerfDevice::recv": "Receive samples at the timestamp specified by d_rx_meta.timestamp", "gr::SoilCW::soil_cw_radar_cc_impl": "", "gr::SoilCW::soil_cw_radar_cc_impl::handle_scan_msg": "set d_scan to true when a \\\"scan\\\" message is received", "gr::SoilCW::soil_cw_radar_cc_impl::init_sample_buffers": "Initialise _16icbuf_in, _32fcbuf_in, _16icbuf_out, _32fcbuf_out and _32fc_samples The size of _16icbuf_in: 2 * NUM_TX_CHANNELS * d_burst_len * sizeof(int16_t) The size of _16icbuf_out: 2 * NUM_TX_CHANNELS * d_burst_len * sizeof(int16_t) The size of _32fcbuf_in: NUM_TX_CHANNELS * d_burst_len * sizeof(gr_complex) The size of _32fcbuf_out: NUM_TX_CHANNELS * d_burst_len * sizeof(gr_complex) The size of _32fc_samples: d_burst_len * sizeof(gr_complex) Then pulse samples are generated and stored to _32fc_samples, based on the choice of waveform", "gr::SoilCW::soil_cw_radar_cc_impl::generate_pure_tone_samples": "Generate single tone samples, and store them to _32fc_samples The samples to be transmitted via the two TX channels are interleaved", "gr::SoilCW::soil_cw_radar_cc_impl::soil_cw_radar_cc_impl": "Class Constructor. The jobs include:", "gr::SoilCW::soil_cw_radar_cc_impl::~soil_cw_radar_cc_impl": "", "gr::SoilCW::soil_cw_radar_cc_impl::work": ""}